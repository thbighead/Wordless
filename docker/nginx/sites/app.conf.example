server {
    listen 80;
    listen [::]:80;

    # For https
    listen 443 ssl;
    listen [::]:443 ssl ipv6only=on;
    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;

    server_name APP_URL.env;
    # BEGIN Samuel's NGINX config
    client_max_body_size 64M;
    # GZIP config
    gzip on;
    gzip_comp_level    5;
    gzip_min_length    256;
    gzip_proxied       any;
    gzip_vary          on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
    # END Samuel's NGINX config
    root /var/www/public_html;
    index index.php index.html index.htm;

    # BEGIN Samuel's NGINX config
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location ~ /.well-known {
        allow all;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    rewrite ^/wp-content/?(.*)$ /wp-cms/wp-content/$1 last;
    # END Samuel's NGINX config

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # BEGIN Samuel's NGINX config
    location /wp-cms/wp-core/ {
        try_files $uri $uri/ /wp-cms/wp-core/index.php?$args;
    }

    location /wp-admin {
        rewrite ^/wp-admin/?$ /wp-cms/wp-core/wp-admin/index.php redirect;
        rewrite ^/wp-admin/?(.*)?$ /wp-cms/wp-core/wp-admin/$1 redirect;
    }

    location /wp-content/ {
        alias /var/www/html/public_html/wp-cms/wp-content/;
    }
    # END Samuel's NGINX config

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;
        # BEGIN Samuel's NGINX config
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        fastcgi_split_path_info ^(/wp-cms/wp-core)(/.*)$;
        #deactivating because it's not working
        #include snippets/fastcgi-php.conf;
        fastcgi_intercept_errors on;
        # END Samuel's NGINX config
    }

    # BEGIN Samuel's NGINX config
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 30d;
        log_not_found off;
    }

    location ~* \.(eot|ttf|woff|woff2)$ {
        add_header Access-Control-Allow-Origin *;
    }
    # END Samuel's NGINX config

    location ~ /\.ht {
        deny all;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
        log_not_found off;
    }

    error_log /var/log/nginx/app_error.log;
    access_log /var/log/nginx/app_access.log;
}
